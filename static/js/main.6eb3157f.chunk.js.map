{"version":3,"sources":["reportWebVitals.js","_api/api.js","_utils/filter.js","_utils/sort.js","_redux/appReducer.js","_redux/tableReducer.js","components/common/Paginator.jsx","_assets/caretUp.svg","_assets/caretDown.svg","components/Table/TableHeaders.jsx","components/Table/TableBody.jsx","components/common/AdditionalInfo.jsx","components/common/Preloader.jsx","components/Table/TableContainer.jsx","components/NavigationMenu/AddNewRow.jsx","_utils/validation.js","_assets/search.svg","components/common/Filter.jsx","components/NavigationMenu/UploadExampleData.jsx","components/NavigationMenu/NavigationContainer.jsx","components/common/ErrorMessage.jsx","components/App/App.js","_redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Agent","https","rejectUnauthorized","axios","create","defaults","httpsAgent","api","getData","testData","filterTableByInput","items","input","keys","value","toLowerCase","filter","row","key","String","includes","sortItemsByKey","method","sortedItems","sort","a","b","SHOW_ERROR","showError","error","type","initialState","appReducer","state","action","GET_TABLE_DATA_SUCCESS","CLEAR_TABLE","ADD_NEW_ROW_SUCCESS","SORT_TABLE_SUCCESS","FILTER_TABLE_SUCCESS","SET_CURRENT_PAGE","SHOW_ADDITIONAL_INFO","setCurrentPage","payload","currentPage","setChosenItem","chosenItem","toggleIsFetching","isFetching","headers","rows","filteredRows","filtersApplied","tableReducer","Paginator","totalItemsCount","pageSize","pagesTotal","Math","ceil","pages","lastShownPage","i","push","pagesNavigation","map","page","Pagination","Item","active","onClick","First","disabled","Prev","Next","Last","TableHeaders","sortTable","useState","id","firstName","lastName","email","phone","columnsSorted","setColumnsSorted","className","e","alt","src","caretDown","caretUp","TableBody","firstItemOnCurrentPage","lastItemOnCurrentPage","length","pageItems","slice","handleClick","index","rowsVisible","cn","AdditionalInfo","description","address","Card","body","Text","streetAddress","city","zip","Preloader","Row","Spinner","animation","role","size","connect","table","sortedColumn","dispatch","shownItems","Table","bordered","hover","AddNewRow","addRow","formValid","setFormValid","inputs","setInputs","useEffect","formData","Object","values","Form","striped","onChange","field","target","Button","variant","preventDefault","Filter","filterTable","inline","InputGroup","Prepend","search","FormControl","placeholder","UploadExampleData","getTableData","url","NavDropdown","title","bigDataUrl","Divider","smallDataUrl","addNewRow","newRow","newRows","tableData","console","log","filters","indexOf","splice","open","setOpen","Navbar","expand","Nav","Link","ErrorMessage","Alert","onClose","dismissible","Heading","app","Container","fluid","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb3157f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\nimport https from 'https'\n\nconst Agent = new https.Agent({\n  rejectUnauthorized: false,\n})\nconst instance = axios.create()\ninstance.defaults.httpsAgent = Agent\n\nconst api = {\n  // getData: (URL) => instance.get(URL).then(({ data }) => data),\n  getData: (testData) => testData,\n}\n\nexport default api\n","export const filterTableByInput = (items, input, keys) => {\n  let filteredItems = [...items]\n  const value = input.toLowerCase()\n  filteredItems = items.filter((row) => {\n    for (let key of keys) {\n      const innerText = String(row[key]).toLowerCase()\n      if (innerText.includes(value)) return true\n    }\n  })\n  return filteredItems\n}\n","export const sortItemsByKey = (items, key, method) => {\n  const sortedItems = [...items]\n  switch (method) {\n    case 'asc': {\n      sortedItems.sort((a, b) => {\n        if (a[key] < b[key]) {\n          return -1\n        }\n        if (a[key] > b[key]) {\n          return 1\n        }\n        return 0\n      })\n      return sortedItems\n    }\n    case 'desc': {\n      sortedItems.sort((a, b) => {\n        if (a[key] > b[key]) {\n          return -1\n        }\n        if (a[key] < b[key]) {\n          return 1\n        }\n        return 0\n      })\n      return sortedItems\n    }\n    default:\n      return sortedItems\n  }\n}\n","const SHOW_ERROR = 'appReducer/SHOW_ERROR'\n\nexport const showError = (error) => ({\n  type: SHOW_ERROR,\n  error,\n})\n\nconst initialState = {\n  error: null,\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      }\n    default:\n      return state\n  }\n}\nexport default appReducer\n","import api from '../_api/api'\nimport { filterTableByInput } from '../_utils/filter'\nimport { sortItemsByKey } from '../_utils/sort'\nimport { showError } from './appReducer'\n\nconst GET_TABLE_DATA_SUCCESS = 'tableReducer/GET_TABLE_DATA_SUCCESS'\nconst CLEAR_TABLE = 'tableReducer/CLEAR_TABLE'\nconst ADD_NEW_ROW_SUCCESS = 'tableReducer/ADD_NEW_ROW_SUCCESS'\nconst SORT_TABLE_SUCCESS = 'tableReducer/SORT_TABLE_SUCCESS'\nconst FILTER_TABLE_SUCCESS = 'tableReducer/FILTER_TABLE_SUCCESS'\nconst SET_CURRENT_PAGE = 'tableReducer/SET_CURRENT_PAGE'\nconst SHOW_ADDITIONAL_INFO = 'tableReducer/SHOW_ADDITIONAL_INFO'\nconst TOGGLE_IS_FETCHING = 'tableReducer/SHOW_ADDITIONAL_INFO'\n\nconst getTableDataSuccess = (payload) => ({\n  type: GET_TABLE_DATA_SUCCESS,\n  payload,\n})\nconst clearTable = () => ({\n  type: CLEAR_TABLE,\n  payload: { rows: [], chosenItem: '' },\n})\nconst addNewRowSuccess = (payload) => ({\n  type: ADD_NEW_ROW_SUCCESS,\n  payload,\n})\nconst sortTableSuccess = (payload) => ({\n  type: SORT_TABLE_SUCCESS,\n  payload,\n})\nconst filterTableSuccess = (payload) => ({\n  type: FILTER_TABLE_SUCCESS,\n  payload,\n})\nexport const setCurrentPage = (payload) => ({\n  type: SET_CURRENT_PAGE,\n  payload: { currentPage: payload },\n})\nexport const setChosenItem = (payload) => ({\n  type: SHOW_ADDITIONAL_INFO,\n  payload: { chosenItem: payload },\n})\nconst toggleIsFetching = (payload) => ({\n  type: TOGGLE_IS_FETCHING,\n  payload: { isFetching: payload },\n})\n\nexport const getTableData = (url) => async (dispatch) => {\n  dispatch(showError(null))\n  dispatch(clearTable())\n  dispatch(toggleIsFetching(true))\n  try {\n    const tableData = await api.getData(url)\n    dispatch(getTableDataSuccess({ rows: tableData }))\n  } catch (e) {\n    console.log(e)\n    dispatch(showError('Не удалось загрузить данные'))\n  }\n  dispatch(toggleIsFetching(false))\n}\nexport const addNewRow = (rows, newRow) => async (dispatch) => {\n  const newRows = [newRow, ...rows]\n  dispatch(addNewRowSuccess({ rows: newRows }))\n  dispatch(setCurrentPage(1))\n}\nexport const sortTable = (rows, sortedColumn, method) => async (dispatch) => {\n  const sortedItems = sortItemsByKey(rows, sortedColumn, method)\n  dispatch(sortTableSuccess({ rows: sortedItems }))\n  dispatch(setChosenItem(''))\n}\nexport const filterTable = (items, input, filtersApplied, headers) => async (\n  dispatch\n) => {\n  const filters = [...filtersApplied]\n  const filteredRows = filterTableByInput(items, input, headers)\n  if (input) {\n    if (!filters.includes(FILTER_TABLE_SUCCESS))\n      filters.push(FILTER_TABLE_SUCCESS)\n  } else {\n    const index = filters.indexOf(FILTER_TABLE_SUCCESS)\n    filters.splice(index, 1)\n  }\n  dispatch(filterTableSuccess({ filteredRows, filtersApplied: filters }))\n  dispatch(setCurrentPage(1))\n}\n\nconst initialState = {\n  headers: ['id', 'firstName', 'lastName', 'email', 'phone'],\n  rows: [],\n  filteredRows: [],\n  filtersApplied: [],\n  currentPage: 1,\n  chosenItem: '',\n}\n\nconst tableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TABLE_DATA_SUCCESS:\n    case CLEAR_TABLE:\n    case ADD_NEW_ROW_SUCCESS:\n    case SORT_TABLE_SUCCESS:\n    case FILTER_TABLE_SUCCESS:\n    case SET_CURRENT_PAGE:\n    case SHOW_ADDITIONAL_INFO:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\nexport default tableReducer\n","import { Pagination } from 'react-bootstrap'\n\nconst Paginator = ({\n  totalItemsCount,\n  pageSize = 50,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const pagesTotal = Math.ceil(totalItemsCount / pageSize)\n  const pages = []\n\n  const lastShownPage =\n    currentPage < 3 ? 3 : currentPage > 18 ? 20 : currentPage + 1\n  const firstShownPage =\n    currentPage < 3 ? 1 : currentPage > 19 ? 18 : currentPage - 1\n  for (let i = firstShownPage; i <= lastShownPage; i += 1) {\n    pages.push(i)\n  }\n\n  const pagesNavigation = pages.map((page, i) => (\n    <Pagination.Item\n      key={i}\n      active={currentPage === page}\n      onClick={() => setCurrentPage(page)}\n    >\n      {page}\n    </Pagination.Item>\n  ))\n\n  return (\n    pagesTotal > 1 && (\n      <Pagination>\n        <Pagination.First\n          disabled={currentPage <= 1}\n          onClick={() => setCurrentPage(1)}\n        />\n        <Pagination.Prev\n          disabled={currentPage <= 1}\n          onClick={() => setCurrentPage(currentPage - 1)}\n        />\n        {pagesNavigation}\n        <Pagination.Next\n          disabled={currentPage >= pagesTotal}\n          onClick={() => setCurrentPage(currentPage + 1)}\n        />\n        <Pagination.Last\n          disabled={currentPage >= pagesTotal}\n          onClick={() => setCurrentPage(pagesTotal)}\n        />\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginator\n","export default __webpack_public_path__ + \"static/media/caretUp.e3c9808d.svg\";","export default __webpack_public_path__ + \"static/media/caretDown.7eed9ce3.svg\";","import caretUp from '../../_assets/caretUp.svg'\nimport caretDown from '../../_assets/caretDown.svg'\nimport { useState } from 'react'\n\nconst TableHeaders = ({ headers, rows, sortTable }) => {\n  const [columnsSorted, setColumnsSorted] = useState({\n    id: 'asc',\n    firstName: 'asc',\n    lastName: 'asc',\n    email: 'asc',\n    phone: 'asc',\n  })\n\n  const handleClick = (key) => (e) => {\n    const method = columnsSorted[key]\n    sortTable(rows, key, method)\n    setColumnsSorted({\n      id: 'asc',\n      firstName: 'asc',\n      lastName: 'asc',\n      email: 'asc',\n      phone: 'asc',\n      [key]: method === 'asc' ? 'desc' : 'asc',\n    })\n  }\n\n  return (\n    <thead>\n      <tr>\n        {headers.map((value) => (\n          <th className='sort-th' key={value} onClick={handleClick(value)}>\n            <div>\n              {value}\n              <img\n                alt=''\n                className='sort-img'\n                src={columnsSorted[value] === 'asc' ? caretDown : caretUp}\n              />\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHeaders\n","import cn from 'classnames'\n\nconst TableBody = ({ headers, rows, currentPage, setChosenItem }) => {\n  const firstItemOnCurrentPage = (currentPage - 1) * 50 + 1\n  const lastItemOnCurrentPage =\n    currentPage * 50 < rows.length ? currentPage * 50 : rows.length\n\n  const pageItems = rows.slice(\n    firstItemOnCurrentPage - 1,\n    lastItemOnCurrentPage\n  )\n\n  const handleClick = (index) => (e) => {\n    setChosenItem(pageItems[index])\n  }\n\n  const rowsVisible = pageItems.map((row, i) => (\n    <tr key={`row_${i}}`}>\n      {headers.map((value, index) => (\n        <td\n          className={cn(value, 'row_element')}\n          key={`td_${index}`}\n          onClick={handleClick(i)}\n        >\n          {row[value]}\n        </td>\n      ))}\n    </tr>\n  ))\n\n  return <tbody>{rowsVisible}</tbody>\n}\n\nexport default TableBody\n","import { Card } from 'react-bootstrap'\n\nconst AdditionalInfo = ({ chosenItem }) => {\n  const { firstName, lastName, description, address } = chosenItem\n  return (\n    <Card body>\n      <Card.Text>\n        Выбран пользователь: <b>{`${firstName} ${lastName}`}</b>\n      </Card.Text>\n      <Card.Text>\n        Описание: <b>{description || ''}</b>\n      </Card.Text>\n      <Card.Text>\n        Адрес проживания: <b>{address?.streetAddress || ''}</b>\n      </Card.Text>\n      <Card.Text>\n        Город: <b>{address?.city || ''}</b>\n      </Card.Text>\n      <Card.Text>\n        Провинция/штат: <b>{address?.state || ''}</b>\n      </Card.Text>\n      <Card.Text>\n        Индекс: <b>{address?.zip || ''}</b>\n      </Card.Text>\n    </Card>\n  )\n}\n\nexport default AdditionalInfo\n","import React from 'react'\nimport { Row, Spinner } from 'react-bootstrap'\n\nconst Preloader = () => {\n  return (\n    <Row className='justify-content-center'>\n      <Spinner animation='grow' role='status' size='sm'></Spinner>\n      <Spinner animation='grow' role='status' size='sm'></Spinner>\n      <Spinner animation='grow' role='status' size='sm'></Spinner>\n    </Row>\n  )\n}\n\nexport default Preloader\n","import { connect } from 'react-redux'\nimport { Table } from 'react-bootstrap'\nimport {\n  sortTable,\n  setCurrentPage,\n  setChosenItem,\n} from '../../_redux/tableReducer'\nimport Paginator from '../common/Paginator'\nimport TableHeaders from './TableHeaders'\nimport TableBody from './TableBody'\nimport AdditionalInfo from '../common/AdditionalInfo'\nimport Preloader from '../common/Preloader'\n\nconst TableContainer = ({\n  rows,\n  headers,\n  filteredRows,\n  filtersApplied,\n  currentPage,\n  isFetching,\n  setCurrentPage,\n  setChosenItem,\n  chosenItem,\n  sortTable,\n}) => {\n  const shownItems = filtersApplied.length ? filteredRows : rows\n\n  return (\n    <>\n      <Table size='sm' bordered hover>\n        <TableHeaders headers={headers} rows={rows} sortTable={sortTable} />\n        <TableBody\n          isFetching={isFetching}\n          currentPage={currentPage}\n          headers={headers}\n          rows={shownItems}\n          setChosenItem={setChosenItem}\n        />\n      </Table>\n      {isFetching && <Preloader />}\n      {!isFetching && (\n        <Paginator\n          totalItemsCount={shownItems.length}\n          setCurrentPage={setCurrentPage}\n          currentPage={currentPage}\n        />\n      )}\n      {chosenItem && <AdditionalInfo chosenItem={chosenItem} />}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ table }) => ({\n  headers: table.headers,\n  rows: table.rows,\n  filteredRows: table.filteredRows,\n  filtersApplied: table.filtersApplied,\n  currentPage: table.currentPage,\n  chosenItem: table.chosenItem,\n  isFetching: table.isFetching,\n})\n\nexport default connect(mapStateToProps, {\n  setCurrentPage,\n  setChosenItem,\n  sortTable,\n})(TableContainer)\n","import { useEffect, useState } from 'react'\nimport { Button, Card, Form, Table } from 'react-bootstrap'\nimport { allFieldsHasValues } from '../../_utils/validation'\n\nconst AddNewRow = ({ rows, headers, addRow }) => {\n  const [formValid, setFormValid] = useState(false)\n  const [inputs, setInputs] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  })\n\n  const formValidation = () => {\n    if (allFieldsHasValues(inputs)) {\n      setFormValid(true)\n    } else {\n      setFormValid(false)\n    }\n  }\n  useEffect(formValidation, [inputs])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    addRow(rows, inputs)\n    setInputs({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n    })\n  }\n\n  const handleChange = (field) => (e) => {\n    setInputs({\n      ...inputs,\n      [field]: e.target.value,\n    })\n  }\n\n  return (\n    <Card body>\n      <Form>\n        <Table size='sm' striped bordered hover>\n          <thead>\n            <tr>\n              {headers.map((value) => (\n                <th key={`th_${value}`}>{value}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {headers.map((value) => (\n                <td key={`td_${value}`}>\n                  <input\n                    value={inputs[value]}\n                    onChange={handleChange(value)}\n                    className='form-control'\n                  />\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </Table>\n        <Button\n          type='submit'\n          variant='secondary'\n          disabled={!formValid}\n          onClick={handleSubmit}\n        >\n          Добавить в таблицу\n        </Button>\n      </Form>\n    </Card>\n  )\n}\nexport default AddNewRow\n","export const allFieldsHasValues = (formData) => {\n  return !Object.values(formData).includes('')\n}\n","export default __webpack_public_path__ + \"static/media/search.16d40f58.svg\";","import { Form, FormControl, InputGroup } from 'react-bootstrap'\nimport search from '../../_assets/search.svg'\n\nconst Filter = ({ headers, rows, filterTable, filtersApplied }) => {\n  const handleChange = (e) => {\n    const input = e.target.value\n    filterTable(rows, input, filtersApplied, headers)\n  }\n  return (\n    <Form inline>\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text id='basic-addon1'>\n            <img src={search} alt='search' />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          type='text'\n          placeholder='Найти в таблице...'\n          onChange={handleChange}\n          className=' mr-sm-2'\n        />\n      </InputGroup>\n    </Form>\n  )\n}\nexport default Filter\n","import { NavDropdown } from 'react-bootstrap'\nimport smallDataUrl from '../../_assets/test_data/random_32.json'\nimport bigDataUrl from '../../_assets/test_data/random_1000.json'\n\nconst UploadExampleData = ({ getTableData }) => {\n  // const bigDataUrl =\n  // 'https://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\n  // const smallDataUrl =\n  //   'https://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\n\n  const handleClick = (url) => (e) => {\n    getTableData(url)\n  }\n\n  return (\n    <NavDropdown id='basic-nav-dropdown' title='Загрузить таблицу'>\n      <NavDropdown.Item onClick={handleClick(bigDataUrl)}>\n        Большая таблица (1000)\n      </NavDropdown.Item>\n      <NavDropdown.Divider />\n      <NavDropdown.Item onClick={handleClick(smallDataUrl)}>\n        Небольшая таблица (32)\n      </NavDropdown.Item>\n    </NavDropdown>\n  )\n}\n\nexport default UploadExampleData\n","import { Nav, Navbar } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { addNewRow, getTableData, filterTable } from '../../_redux/tableReducer'\nimport AddNewRow from './AddNewRow'\nimport Filter from '../common/Filter'\nimport UploadExampleData from './UploadExampleData'\nimport { useState } from 'react'\n\nfunction NavigationContainer({\n  headers,\n  rows,\n  filtersApplied,\n  filterTable,\n  addNewRow,\n  getTableData,\n}) {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <>\n      <Navbar expand='lg' className='navbar'>\n        <Nav className='mr-auto'>\n          <UploadExampleData getTableData={getTableData} />\n          <Nav.Link onClick={() => setOpen(!open)}>Добавить ряд</Nav.Link>\n        </Nav>\n        <Filter\n          headers={headers}\n          rows={rows}\n          filterTable={filterTable}\n          filtersApplied={filtersApplied}\n        />\n      </Navbar>\n      {open && <AddNewRow headers={headers} rows={rows} addRow={addNewRow} />}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ table }) => ({\n  headers: table.headers,\n  rows: table.rows,\n  filtersApplied: table.filtersApplied,\n})\n\nexport default connect(mapStateToProps, {\n  addNewRow,\n  getTableData,\n  filterTable,\n})(NavigationContainer)\n","import { Alert } from 'react-bootstrap'\n\nconst ErrorMessage = ({ error, showError }) => {\n  return (\n    <Alert variant='danger' onClose={() => showError(null)} dismissible>\n      <Alert.Heading>Ошибка</Alert.Heading>\n      <p>{error}</p>\n    </Alert>\n  )\n}\n\nexport default ErrorMessage\n","import { Container } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport TableContainer from '../Table/TableContainer'\nimport NavigationContainer from '../NavigationMenu/NavigationContainer'\nimport { showError } from '../../_redux/appReducer'\nimport ErrorMessage from '../common/ErrorMessage'\n\nfunction App({ error, showError }) {\n  return (\n    <Container fluid className={error ? 'error' : ''}>\n      {error && <ErrorMessage error={error} showError={showError} />}\n      <header className='header'></header>\n      <NavigationContainer />\n      <TableContainer />\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({ app }) => ({\n  error: app.error,\n})\n\nexport default connect(mapStateToProps, { showError })(App)\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport appReducer from './appReducer'\nimport tableReducer from './tableReducer'\n\nconst rootReducer = combineReducers({\n  table: tableReducer,\n  app: appReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport App from './components/App/App'\nimport { Provider } from 'react-redux'\nimport store from './_redux/store'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}